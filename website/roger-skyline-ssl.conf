# From https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html
# and https://gist.github.com/plentz/6737338

# Use HSTS to make browsers automatically use HTTPS after the first HTTPS connection # https://hstspreload.org/
add_header Strict-Transport-Security "max-age=31536000; includeSubdomains; ";
# Prevent clickjacking (SAMEORIGIN can be used instead of DENY)
add_header X-Frame-Options DENY;
# Prevent content sniffing
add_header X-Content-Type-Options nosniff;

# All protocols other than TLS 1.2 and TLS 1.3 are considered unsafe.
ssl_protocols TLSv1.2 TLSv1.3;
# ECDHE+AESGCM ciphers are selected first. These are TLS 1.2 ciphers. No known attack currently target these ciphers.
ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
# Prefer the server's ciphers to the client's ones
ssl_prefer_server_ciphers on;

# Use the DH group that we generated
ssl_dhparam /etc/ssl/certs/dhparam.pem;

# Avoid to perform a SSL handshake for every request
ssl_session_cache shared:SSL:10m;
# Enable session tickets would make ECDH useless # https://www.imperialviolet.org/2013/06/27/botchingpfs.html
ssl_session_tickets off;
ssl_session_timeout 4h;

# Use OCSP stapling
ssl_stapling on;
ssl_stapling_verify on;
resolver 8.8.8.8 8.8.4.4 valid=300s;
resolver_timeout 5s;

# Coud use HPKP (Public Key Pinning) # https://raymii.org/s/articles/HTTP Public Key Pinning Extension_HPKP.html
